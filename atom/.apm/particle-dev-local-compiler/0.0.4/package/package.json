{"name":"particle-dev-local-compiler","main":"./lib/main","version":"0.0.4","description":"Package providing local compilation for Particle devices in Particle Dev","keywords":["spark","particle","compiler","photon"],"repository":{"type":"git","url":"git+https://github.com/spark/particle-dev-local-compiler.git"},"license":"MIT","engines":{"atom":">=1.0.0 <2.0.0"},"dependencies":{"atom-package-deps":"^2.1.3","atom-space-pen-views":"^2.0.0","dockerode":"^2.2.2","event-kit":"^1.0.0","fs-plus":"^2.8.1","glob":"^5.0.15","particle-dev-views":"git://github.com/spark/particle-dev-views.git#v0.0.3","semver":"^5.0.3","when":"^3.7.3"},"package-deps":["spark-dev","particle-dev-profiles","tool-bar","console-panel"],"consumedServices":{"status-bar":{"versions":{"^1.0.0":"consumeStatusBar"}},"console-panel":{"versions":{"^1.0.0":"consumeConsolePanel"}},"tool-bar":{"versions":{"^0.1.0":"consumeToolBar"}},"particle-dev":{"versions":{"^0.0.1":"consumeParticleDev"}},"particle-dev-profiles":{"versions":{"^0.0.1":"consumeProfiles"}}},"readme":"# Particle Dev Local Compiler\n\n**Note:** local compilation is an experimental feature and may have issues with some projects.\n\n![Particle Dev Local Compiler](http://cl.ly/image/2q040i183M01/Screen%20Recording%202015-10-15%20at%2002.05%20PM.gif)\n\n## Installation steps\n\n### Install Docker Toolbox\n\nFirst follow instructions for [OS X](https://docs.docker.com/mac/step_one/) / [Windows](https://docs.docker.com/windows/step_one/) / [Linux](https://docs.docker.com/linux/started/).\n\nIf everything went well, open **Docker Quickstart Terminal** and type:\n```\n$ docker-machine env default\n```\nand take note of values that were shown.\n\n### Install and setup this package\n\n1. Open **Atom** or **Particle Dev**\n2. Open **Command Palette** (`Cmd`-`Shift`-`P` on OS X or `Ctrl`-`Shift`-`P` on Windows/Linux)\n3. Type *install packages*\n4. Choose **Settings View: Install Packages and Themes**\n5. Search for *Particle Dev Local Compiler*\n6. Install found package\n7. Click **Settings** next to package\n8. Fill **Docker Cert Path** and **Docker Host** with noted values from `docker-machine` output\n9. Open **Command Palette**\n10. Type *update firmware*\n11. Choose **Particle Dev Local Compiler: Update Firmware Versions**\n\nAfter this finishes you should be ready to start using local compiler.\n\n## Usage\n\n### Selecting target platform/version\nAfter installation you should see two new items in status bar next to selected device:\n\n![Target platform and target firmware version](http://cl.ly/image/3S3C3u010c0H/dev-target-platform-and-version.png)\n\nFirst one allows you to select for which platform you want to build the firmware.\n\nSecond allows to select which firmware version should be targeted.\n\n**Note:** those currently affect only local compilation.\n\n**Note:** not all platforms are compatible with all versions (i.e. `0.3.4` won't work for Photon).\n\n### Compiling locally\n\nWith project opened you should see two icons with check icon on them:\n\n![Flash and compile buttons](http://cl.ly/image/0t3M1g2A3Y1u/dev-compile-locally.png)\n\nFirst one will do a cloud compile as previously.\n\nSecond does a local compilation. Clicking it will create `build` directory in your project and fill it with compilation results.\n\nResulting binary can be flashed over the air using **Flash** icon on over the wire using `particle flash --usb <filename>` [CLI command](https://docs.particle.io/reference/cli/#particle-flash).\n\n## FAQ\n\n#### Q: **Update Firmware Versions** takes a very long time. Did it hang?\nA: Depending on many factors, first update may take up to dozens of minutes as it pulls image for every firmware version. There's [an issue](https://github.com/spark/particle-dev-local-compiler/issues/8) that should make first update much quicker. Until then it's best to wait until it finishes.\n\n#### Q: I already entered Docker settings but still get error telling me I don't have Docker environment set up\nA: On Windows and OS X, docker requires running a small virtual machine to work. This is managed by `docker-machine` tool. Make sure you run `docker-machine start default` after restarting your computer.\n\n#### Q: I get `Platform 'core' does not support dynamic modules` error\nA: Some platforms and versions won't work together. You have to try using different version.\n\n#### Q: After updating firmware versions Docker VM has grown to over 20GB\nA: Alpha version of local compiler tries to download all available versions which may take a lot of disk space. If you prefer just to keep latest version you can recreate VM using:\n\n```\n$ docker-machine rm default\n$ docker-machine create --driver=virtualbox default\n$ eval \"$(docker-machine env default)\"\n$ docker pull particle/buildpack-particle-firmware:v0.4.7\n```\n**Note:** it is possible you will need to update Docker settings in Atom/Particle Dev.\n\n#### Q: How can I uninstall local compiler and all related software?\nA: To uninstall Particle Dev Local Compiler package, go to **Settings View: Uninstall packages** and click **Uninstall** next to it. To uninstall Docker Toolbox:\n\nOn Windows you can remove **Docker Toolbox** and **VirtualBox** using **Programs and Features** in **Control Panael**.\n\nOn OS X you can use [the official script](https://github.com/docker/toolbox/blob/master/osx/uninstall.sh) to uninstall **Docker Machine** and use **VirtualBox** removal tool from [latest VirtualBox](https://www.virtualbox.org/wiki/Downloads).\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/spark/particle-dev-local-compiler/issues"},"homepage":"https://github.com/spark/particle-dev-local-compiler#readme","_id":"particle-dev-local-compiler@0.0.4","_shasum":"9832c42871e2bd31c33a2ba54efcb9c7678d7d24","_resolved":"file:../d-116211-14501-1591ffi/package.tgz","_from":"../d-116211-14501-1591ffi/package.tgz"}